name: gitops IaC CaC Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  infra:
    name: 'gitops IaC CaC job'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan

    - name: Terraform Destroy
      if: failure()
      run: terraform destroy -auto-approve
      
    - name: Get Terraform Outputs
      id: outputs
      run: |
        set -e
        k8smaster_ip_var=$(terraform output -raw k8smaster_public_ip)
        k8sworker1_ip_var=$(terraform output -raw k8sworker1_public_ip)
        ops_ip_var=$(terraform output -raw ops_public_ip)
        ssh_user_var=$(terraform output -raw ssh_user)
        
        echo "k8smaster_ip_env_var=$k8smaster_ip_var" >> $GITHUB_ENV
        echo "k8sworker1_ip_env_var=$k8sworker1_ip_var" >> $GITHUB_ENV
        echo "ops_ip_env_var=$ops_ip_var" >> $GITHUB_ENV
        echo "ssh_user_env_var=$ssh_user_var" >> $GITHUB_ENV
         
    - name: Terraform Destroy
      if: failure()
      run: terraform destroy -auto-approve
      
    - name: Update Inventory File
      run: |
        sed -i "s/k8smaster ansible_host=.*/k8smaster ansible_host=${{ env.k8smaster_ip_env_var }} ansible_user=${{ env.ssh_user_env_var }}/" inventory.ini
        sed -i "s/k8sworker1 ansible_host=.*/k8sworker1 ansible_host=${{ env.k8sworker1_ip_env_var }} ansible_user=${{ env.ssh_user_env_var }}/" inventory.ini
        sed -i "s/ops ansible_host=.*/ops ansible_host=${{ env.ops_ip_env_var }} ansible_user=${{ env.ssh_user_env_var }}/" inventory.ini
    
    - name: Terraform Destroy
      if: failure()
      run: terraform destroy -auto-approve
      
    - name: Install Ansible
      run: sudo apt-get update && sudo apt-get install -y ansible

    - name: Add SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
      
    - name: Add known hosts
      run: ssh-keyscan -H ${{ env.k8smaster_public_ip }} ${{ env.k8sworker1_public_ip }} ${{ env.ops_public_ip }} >> ~/.ssh/known_hosts
    
    - name: Run k8s_playbook
      run: ansible-playbook k8s_playbook.yaml
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'false'
        ANSIBLE_REMOTE_USER: ${{ env.ssh_user }}
        ANSIBLE_PRIVATE_KEY_FILE: ~/.ssh/id_ed25519

    - name: Run ops_playbook
      run: ansible-playbook ops_playbook.yaml
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'false'
        ANSIBLE_REMOTE_USER: ${{ env.ssh_user }}
        ANSIBLE_PRIVATE_KEY_FILE: ~/.ssh/id_ed25519

    - name: Run notify_playbook
      run: ansible-playbook notify_playbook.yaml
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'false'
        ANSIBLE_REMOTE_USER: ${{ env.ssh_user }}
        ANSIBLE_PRIVATE_KEY_FILE: ~/.ssh/id_ed25519
        
    - name: Clone flux-infra repository
      run: git clone https://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@github.com/gitops-lcm/flux-infra.git github/workspace/flux-infra
  
    - name: Copy monitoring folder to flux-infra
      run: cp -r github/workspace/gitops-poc/resources/monitoring github/workspace/flux-infra

    - name: Copy flux operator CRDs to flux-infra
      run: cp github/workspace/gitops-poc/resources/crds/fluxops/* github/workspace/flux-infra/clusters/ops/

    - name: Git add changes
      working-directory: github/workspace/flux-infra
      run: git add .

    - name: Git commit changes
      working-directory: github/workspace/flux-infra
      run: git commit -m "updated flux ops crds"

    - name: Git push changes to main branch
      working-directory: github/workspace/flux-infra
      run: git push origin main

    - name: Wait for 30 seconds
      run: sleep 30

    - name: Copy flux deployment CRDs to flux-infra
      run: cp github/workspace/gitops-poc/resources/crds/deploy/* github/workspace/flux-infra/clusters/ops/

    - name: Git add changes
      working-directory: github/workspace/flux-infra
      run: git add .

    - name: Git commit changes
      working-directory: github/workspace/flux-infra
      run: git commit -m "updated flux deploy crds"

    - name: Git push changes to main branch
      working-directory: github/workspace/flux-infra
      run: git push origin main

    - name: Wait for 30 seconds
      run: sleep 30
    
    - name: Run patch_playbook
      working-directory: github/workspace/gitops-poc/
      run: ansible-playbook patch_playbook.yaml
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'false'
        ANSIBLE_REMOTE_USER: ${{ env.ssh_user }}
        ANSIBLE_PRIVATE_KEY_FILE: ~/.ssh/id_ed25519

    - name: Terraform Destroy
      if: failure()
      run: terraform destroy -auto-approve
      
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
