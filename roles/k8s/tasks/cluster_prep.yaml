# cluster_prep.yaml
---
- name: Prepare the environment
  become: true
  become_user: root
  vars:
    cp_host: "k8smaster"
  tags:
    - prep
  block:
    - name: Update Apt repos
      ansible.builtin.apt:
        update_cache: true

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist

  # install required packages
    - name: Install required system packages
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
          - apt-transport-https
          - software-properties-common
          - git
          - wget
          - lsb-release
          - gpg
        state: present

    - name: Turn off swap if active
      ansible.builtin.shell:
        cmd: "swapoff -a"
      changed_when: false

    - name: Disable SWAP in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
      changed_when: false

    - name: Configure kernel modules for Kubernetes
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: "{{ item }}"
        create: true
        mode: '0666'
      with_items:
        - overlay
        - br_netfilter

    - name: Load required modules
      community.general.modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Update kernel networking
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        dest: /etc/sysctl.d/k8s.conf
        mode: '0666'

    - name: Update the kernel
      ansible.builtin.shell:
        cmd: sysctl --system
      changed_when: false

  # install key for software install
    - name: Create /etc/apt/keyrings directory with permissions
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0777"

    - name: Download Docker GPG key and set permissions
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        validate_certs: true
        mode: "0644"
        force: true

    - name: Add Docker repository to sources.list.d
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        line: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable'
        create: true
        mode: '0644'

    - name: Update Apt repos
      ansible.builtin.apt:
        update_cache: true

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present

    - name: Apply containerd default configuration
      ansible.builtin.shell:
        cmd: "containerd config default | tee /etc/containerd/config.toml"
      changed_when: false

    - name: Update containerd config
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: '^\s*SystemdCgroup\s*=\s*false'
        replace: 'SystemdCgroup = true'

    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted

  rescue:
    - name: Handle errors during preparation
      ansible.builtin.debug:
        msg: ":: PREP ERROR ::"
